name: Build & Release Honor8x 4.9 Kernel

on:
  workflow_dispatch:          # ÊâãÂä®Ëß¶Âèë
  push:
    branches: [ main ]

env:
  # ===== ‰ªÖÈúÄÊåâËá™Â∑±‰ªìÂ∫ìÊîπÂä® =====
  KERNEL_SOURCE_URL: https://github.com/UEFI233/android_device_huawei_honor8x.git
  KERNEL_SOURCE_BRANCH: EMUI9.1-sukiultra
  DEFCONFIG: merge_kirin710_defconfig
  ARCH: arm64
  CROSS_COMPILE: aarch64-linux-android-
  TOOLCHAIN_URL: https://github.com/Adrilaw/aarch64-linux-android-4.9-toolchain.git
  TOOLCHAIN_BRANCH: master
  # ===== ÊâìÂåÖËÑöÊú¨ & ÂèÇÊï∞ =====
  PACK_SCRIPT: tools/pack_kernerimage_cmd.sh   # Ê∫êÁ†ÅÈáåËá™Â∏¶ÁöÑÊâìÂåÖËÑöÊú¨Ë∑ØÂæÑ
  RELEASE_TAG: latest-build                    # ÂèëË°åÁâàÊ†áÁ≠æ
  PYTHON_CACHE_KEY: python2.7-ubuntu22-cache-v1   # ‰ªªÊÑèÂõ∫ÂÆöÂ≠óÁ¨¶‰∏≤Âç≥ÂèØ
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write            # ÈúÄË¶ÅÂÜôÊùÉÈôêÊâçËÉΩ‰∏ä‰º† Release
    steps:
      - name: Cache Python 2.7 build
        uses: actions/cache@v4
        id: cache-py27
        with:
          path: /usr/local
          key: ${{ env.PYTHON_CACHE_KEY }}      
      
      - name: Install host deps & build Python2.7
        if: steps.cache-py27.outputs.cache-hit != 'true'   # ÂÖ≥ÈîÆÔºöÂëΩ‰∏≠Â∞±Ë∑≥Ëøá
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc bison flex libssl-dev libncurses5-dev \
                          libffi-dev zlib1g-dev libsqlite3-dev libreadline-dev \
                          libbz2-dev libgdbm-dev git wget bison flex
          cd /tmp
          wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz
          tar xf Python-2.7.18.tgz
          cd Python-2.7.18
          ./configure --prefix=/usr/local --enable-unicode=ucs4
          make -j$(nproc)
          sudo make install
          sudo ln -sf /usr/local/bin/python2.7 /usr/bin/python2
          sudo ln -sf /usr/local/bin/python2.7 /usr/bin/python

      - name: Install pre-built Make 3.81
        run: |
          # 1. ‰∏ãËΩΩÂÆòÊñπ 3.81 deb
          wget -q http://archive.ubuntu.com/ubuntu/pool/main/m/make-dfsg/make_3.81-8.2ubuntu3_amd64.deb
          # 2. ÂÆâË£Ö
          sudo dpkg -i make_3.81-8.2ubuntu3_amd64.deb
          # 3. È™åËØÅ
          make --version | head -1
          
      - name: Clone toolchain
        run: |
            git clone --depth=1 $TOOLCHAIN_URL -b $TOOLCHAIN_BRANCH $HOME/toolchain
            echo "$HOME/toolchain/bin" >> $GITHUB_PATH

      - name: Clone kernel source
        run: |
          git clone --depth=1 $KERNEL_SOURCE_URL -b $KERNEL_SOURCE_BRANCH $HOME/kernel

      # ===== ÊèêÂâçÁîüÊàê .config Âπ∂È°∫Â∏¶Êää host Â∑•ÂÖ∑ÁºñÂá∫Êù• =====
      - name: È¢ÑÁºñËØë‰øÆÂ§çÔºàË°•ÂÖÖdtcËß£ÊûêÂô®ÁîüÊàêÔºâ
        run: |
          # ‰øÆÂ§çKconfigÊó†ÊïàÂ≠óÁ¨¶ÈóÆÈ¢ò
          find . -name "Kconfig" -exec sed -i 's/[^[:print:]\t\n]//g' {} +
          # ÊâãÂä®ÁîüÊàêdtcËß£ÊûêÂô®‰ª£Á†ÅÔºàÂÖ≥ÈîÆÊ≠•È™§Ôºâ
          if [ ! -f "$HOME/kernel/scripts/dtc/dtc-parser.tab.c" ]; then
            bison -o $HOME/kernel/scripts/dtc/dtc-parser.tab.c -d $HOME/kernel/scripts/dtc/dtc-parser.y
            flex -o $HOME/kernel/scripts/dtc/dtc-lexer.lex.c $HOME/kernel/scripts/dtc/dtc-lexer.l
          fi
      - name: Patch KernelSU for GCC 4.9
        run: |
         cd $HOME/kernel
         sed -i '/-Wno-int-conversion/d' drivers/kernelsu/Makefile
          
      - name: Fix format specifiers in lcdkit
        run: |
          cd $HOME/kernel
          # Êää %zd ÊîπÊàê %dÔºà‰∏§Â§ÑÈÉΩÂú® lcdkit_panel_adaptor_hs.cÔºâ
          sed -i \
            -e 's/hbm_level=%zd/hbm_level=%d/g' \
            -e 's/ret=%zd/ret=%d/g' \
            drivers/devkit/lcdkit/lcdkit1.0/core/common/hisi/lcdkit_panel_adaptor_hs.c
      - name: üîß Ê∞∏‰πÖÂÖ≥Èó≠Ê†à‰øùÊä§
        run: |
          cd $HOME/kernel
          make O=out $DEFCONFIG
          cd $HOME/kernel/out
          # 1) ÂΩªÂ∫ïÂÖ≥Èó≠ÈÖçÁΩÆ
          sed -i '/CONFIG_CC_STACKPROTECTOR/d;/CONFIG_HAVE_CC_STACKPROTECTOR/d' .config
          cat >> .config <<EOF
          # CONFIG_HAVE_CC_STACKPROTECTOR is not set
          # CONFIG_CC_STACKPROTECTOR is not set
          # CONFIG_CC_STACKPROTECTOR_STRONG is not set
          EOF
          cd $HOME/kernel
          # 2) ÂÖ®Â±ÄÊêúÁ¥¢Âπ∂Ê≥®ÈáäÊéâÊâÄÊúâ -fstack-protector*
          find . -name Makefile -exec sed -i '/-fstack-protector/s/^/#/' {} +
          # 3) ‰øùÈô©Ëµ∑ËßÅÔºåÂÜçÊ∏ÖÁêÜ‰∏ÄÊ¨°
          make O=out olddefconfig

      - name: Build kernel
        run: |
          cd $HOME/kernel
          # Âº∫Âà∂ÂéªÊéâÂ∑•ÂÖ∑ÈìæÊ≥®ÂÖ•ÁöÑÊ†à‰øùÊä§
          export KBUILD_CFLAGS="-fno-stack-protector -fno-stack-protector-strong -fno-stack-protector-all"
          make O=out $DEFconfig
          make -j$(nproc) O=out \
            CROSS_COMPILE=$CROSS_COMPILE \
            ARCH=$ARCH \
            KBUILD_CFLAGS="$KBUILD_CFLAGS" \
            2>&1 | tee out/build.log

      - name: Check build result
        run: |
          if [ -f $HOME/kernel/out/arch/arm64/boot/Image.gz-dtb ]; then
            echo "‚úÖ Build OK"
          else
            echo "‚ùå Build FAILED"
            grep -i "error:" $HOME/kernel/out/build.log || true
            exit 1
          fi

      - name: Pack kernel.img
        run: |
          cd $HOME/kernel
          cp out/arch/arm64/boot/Image.gz-dtb $(dirname $PACK_SCRIPT)/Image.gz
          bash $PACK_SCRIPT                      # ÁîüÊàê kernel.img

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Honor8x 4.9 Kernel Build"
          body: |
            Auto-built on ${{ github.sha }}  
            Toolchain: `aarch64-linux-android-4.9`
          files: |
            $HOME/kernel/kernel.img
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
